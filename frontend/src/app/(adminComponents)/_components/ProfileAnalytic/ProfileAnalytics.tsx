import { useEffect, useState } from "react";
import axios from "axios";

type TopStat = {
  answer: string;
  percent: number;
  description: string;
};

type StatsResponse = {
  goingOut: TopStat;
  weekend: TopStat;
  hobby: TopStat;
};

// üß† Mapping for display
const LABELS: Record<
  string,
  { emoji: string; label: string; description: (percent: number) => string }
> = {
  watchMovies: {
    emoji: "üé¨",
    label: "–ö–∏–Ω–æ “Ø–∑—ç—Ö",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å –∫–∏–Ω–æ “Ø–∑—ç—Ö –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
  coffeeDate: {
    emoji: "‚òï",
    label: "–ö–æ—Ñ–µ –±–æ–ª–∑–æ–æ",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å –≥–∞–¥—É—É—Ä –≥–∞—Ä—á —è—Ä–∏–ª—Ü–∞—Ö –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
  hiking: {
    emoji: "üèî",
    label: "–£—É–ª–∞–Ω–¥ –≥–∞—Ä–∞—Ö",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å –±–∞–π–≥–∞–ª—å–¥ –≥–∞—Ä–∞—Ö –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
  foodOut: {
    emoji: "üç±",
    label: "–•–æ–æ–ª–æ–Ω–¥ –æ—Ä–æ—Ö",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å —Ö–æ–æ–ª–æ–Ω–¥ –æ—Ä–∂ —á–∏–ª–ª—ç—Ö –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
  impact: {
    emoji: "üåç",
    label: "–ù”©–ª”©”© “Ø–∑“Ø“Ø–ª—ç—Ö",
    description: (p) =>
      `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å –Ω–∏–π–≥—ç–º–¥ —ç–µ—Ä—ç–≥ –Ω”©–ª”©”© “Ø–∑“Ø“Ø–ª—ç—Ö–∏–π–≥ —á—É—Ö–∞–ª—á–∏–ª–¥–∞–≥.`,
  },
  fun: {
    emoji: "üéâ",
    label: "–ó—É–≥–∞–∞—Ç–∞–π –±–∞–π—Ö",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å —Ö”©–≥–∂–∏–ª—Ç—ç–π –æ—Ä—á–∏–Ω–¥ –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
  learning: {
    emoji: "üìö",
    label: "–®–∏–Ω—ç –∑“Ø–π–ª —Å—É—Ä–∞—Ö",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å —à–∏–Ω—ç –∑“Ø–π–ª—Å —Å—É—Ä—á —Ö”©–≥–∂–∏—Ö —Å–æ–Ω–∏—Ä—Ö–æ–ª—Ç–æ–π.`,
  },
  sports: {
    emoji: "‚öΩ",
    label: "–°–ø–æ—Ä—Ç",
    description: (p) => `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å —Å–ø–æ—Ä—Ç–æ–æ—Ä —Ö–∏—á—ç—ç–ª–ª—ç—Ö –¥—É—Ä—Ç–∞–π.`,
  },
  // üëá –®–ò–ù–≠–≠–† –ù–≠–ú–ñ –ë–ê–ô–ù–ê
  friendlyGames: {
    emoji: "üéÆ",
    label: "–ù–∞–π–∑—Ç–∞–π–≥–∞–∞ —Ç–æ–≥–ª–æ—Ö",
    description: (p) =>
      `–ë–∞–≥–∏–π–Ω ${p}% –Ω—å –Ω–∞–π–∑—Ç–∞–π–≥–∞–∞ —Ö”©–≥–∂–∏–ª—Ç—ç–π —Ç–æ–≥–ª–æ–æ–º —Ç–æ–≥–ª–æ—Ö –¥—É—Ä—Ç–∞–π –≥—ç—Å—ç–Ω.`,
  },
};

const ProfileAnalytics = () => {
  const [stats, setStats] = useState<StatsResponse | null>(null);

  useEffect(() => {
    axios
      .get(`${process.env.NEXT_PUBLIC_BASE_URL}/stats/getTopChoice`)
      .then((res) => {
        setStats(res.data);
      });
  }, []);

  if (!stats) return <div>Loading...</div>;

  const data = [
    {
      key: "goingOut",
      ...stats?.goingOut,
    },
    {
      key: "weekend",
      ...stats?.weekend,
    },
    {
      key: "hobby",
      ...stats?.hobby,
    },
  ];

  return (
    <div className="h-screen w-full flex justify-center items-center flex-col">
      <div className="max-w-7xl w-full flex flex-col gap-9 p-6">
        <div className="flex gap-6 items-center">
          <h1 className="text-3xl">–°–∞–Ω–∞–ª –±–æ–ª–≥–æ—Ö “Ø–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞–Ω—É—É–¥</h1>
          <div className="py-1.5 px-3 bg-[#E2EBFE] border border-[#6396F8] rounded-4xl">
            <p className="text-[14px]">–ë–∞–≥–∏–π–Ω –ø—Ä–æ—Ñ–∞–π–ª –¥—ç—ç—Ä —Å—É—É—Ä–∏–ª—Å–∞–Ω</p>
          </div>
        </div>

        <div className="flex justify-between w-full">
          {data.map((item) => {
            const meta = LABELS[item.answer];

            if (!meta) return null;

            return (
              <div
                key={item.key}
                className="border rounded-xl w-[387px] h-[164px] flex flex-col gap-2 justify-center p-8 shadow-sm hover:border-blue-400 transition-all"
              >
                <div className="flex gap-2 items-center text-[18px]">
                  <span className="text-2xl">{meta.emoji}</span>
                  <span className="font-medium">{meta.label}</span>
                </div>
                <p className="text-neutral-500 text-[16px]">
                  {meta.description(item.percent)}
                </p>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default ProfileAnalytics;
